#!/bin/bash
#
# Makeaur - A (very) simple AUR installation script
# Copyright (C) 2009 Daniel J Griffiths <ghost1227@archlinux.us>
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA. 

############################################################
# Configure stuff                                          #
############################################################
BUILD_DIR=$HOME/.makeaur
ARGUMENT=$1
MAKEARGS=cf
VER=0.2
ARCH=`arch`
INFO="\e[1;34m=>\e[1;37m"
ERROR="\e[1;31m=>\e[1;37m"
SUCCESS="\e[1;32m=>\e[1;37m"
RESET="\e[0m"

############################################################
# Cleanup and exit                                         #
############################################################
cleanup() {
	echo -e "$INFO Cleaning up temporary files..."
	if [ -d $BUILD_DIR/$ARGUMENT ]; then
		rm -R $BUILD_DIR/$ARGUMENT
	fi
	exit
}

############################################################
# Version function - Displays version information          #
############################################################
version() {
	echo "makeaur v$VER"
}
 
############################################################
# Usage function - Displays usage information              #
############################################################
usage() {
	version
	echo "Usage:"
	echo "      Install package:          makeaur <package>"
	echo "      Other functions:          makeaur <option>"
	echo "Options:"
	echo "      -m, --makeargs            Pass custom options to makepkg (default=cf)"
	echo "      -h, --help                This message"
	echo "      -v, --version             Output version information and exit"
}

############################################################
# Pacwrapper function - The main function                  #
############################################################
pacwrapper() {
	if [ -z $ARGUMENT ]; then
		echo -e "$ERROR Package name is required!$RESSET"
		exit 1
	fi

	if [ ! -d $BUILD_DIR/$ARGUMENT ]; then
		mkdir -p $BUILD_DIR/$ARGUMENT
	fi
	cd $BUILD_DIR/$ARGUMENT
	if [ -f $ARGUMENT.tar.gz ]; then
		echo -e "$SUCCESS Package $ARGUMENT already exists in build directory.$RESET"
	else
		echo -e "$INFO Downloading package $ARGUMENT...$RESET"
		wget -nv http://aur.archlinux.org/packages/$ARGUMENT/$ARGUMENT.tar.gz &> /dev/null
		if [ ! -f $ARGUMENT.tar.gz ]; then
			echo -e "$ERROR Package $ARGUMENT does not exist, exiting.$RESET"
			cleanup
		else
			echo -e "$SUCCESS Package $ARGUMENT downloaded successfully.$RESET"
		fi
	fi
	echo -e "$INFO Extracting package $ARGUMENT...$RESET"
	tar -xf $ARGUMENT.tar.gz
	cd $ARGUMENT
	echo -e "$INFO Beginning make process for $ARGUMENT...$RESET"
	makepkg -$MAKEARGS
	if [ ! -f $ARGUMENT*.pkg.tar.gz ]; then
		echo -e "$ERROR Running makepkg for package $ARGUMENT failed."
		cleanup
	else
		echo -e "$SUCCESS Running makepkg for package $ARGUMENT completed successfully.$RESET"
		echo -e "$INFO Now installing package $ARGUMENT...$RESET"
		PKGVER=`ls $ARGUMENT*.pkg.tar.gz | sed s/$ARGUMENT-// | sed s/-$ARCH.pkg.tar.gz//`
		sudo pacman -U $ARGUMENT-$PKGVER-$ARCH.pkg.tar.gz
		INSTVER=`pacman -Q $ARGUMENT`
		if [ "$INSTVER" != "$ARGUMENT $PKGVER" ]; then
			echo -e "$ERROR Installation of package $ARGUMENT failed, exiting.$RESET"
		else
			echo -e "$SUCCESS Installation of package $ARGUMENT completed successfully.$RESET"
		fi
		cleanup
	fi
}

case "$1" in
	''|'-h'|'--help')
	usage
	;;
	'-v'|'--version')
	version
	;;
	'-m'|'--makeargs')
	MAKEARGS=$2
	ARGUMENT=$3
	pacwrapper
	;;
	*)
	pacwrapper
	;;
esac
